{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\fe\\\\fe-edu\\\\src\\\\components\\\\debug\\\\TournamentAPITester.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { tournamentServiceFixed as tournamentService } from '../../services/tournamentServiceFixed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TournamentAPITester = () => {\n  _s();\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const testAPI = async (testName, apiCall) => {\n    setLoading(true);\n    try {\n      console.log(`🧪 Testing ${testName}...`);\n      const result = await apiCall();\n      console.log(`✅ ${testName} success:`, result);\n      setTestResults(prev => ({\n        ...prev,\n        [testName]: {\n          success: true,\n          data: result,\n          timestamp: new Date().toISOString()\n        }\n      }));\n    } catch (error) {\n      console.error(`❌ ${testName} failed:`, error);\n      setTestResults(prev => {\n        var _error$response, _error$response2;\n        return {\n          ...prev,\n          [testName]: {\n            success: false,\n            error: {\n              message: error.message,\n              status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n              data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n            },\n            timestamp: new Date().toISOString()\n          }\n        };\n      });\n    }\n    setLoading(false);\n  };\n  const runAllTests = async () => {\n    await testAPI('getAllTournaments', () => tournamentService.getAllTournaments());\n    await testAPI('getAllTournamentsWithParams', () => tournamentService.getAllTournaments({\n      page: 1,\n      limit: 5\n    }));\n  };\n  const testCreateTournament = async () => {\n    const testData = {\n      name: 'API Test Tournament',\n      description: 'Test tournament created via API tester',\n      sportType: 'FOOTBALL',\n      maxTeams: 8,\n      startDate: [2024, 12, 25, 10, 0, 0],\n      endDate: [2024, 12, 25, 18, 0, 0],\n      registrationDeadline: [2024, 12, 20, 23, 59, 59],\n      location: 'Test Stadium',\n      rules: 'Test rules',\n      prizeInfo: 'Test prizes',\n      contactInfo: 'test@example.com'\n    };\n    await testAPI('createTournament', () => tournamentService.createTournament(testData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg border border-gray-200 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-gray-900\",\n      children: \"\\uD83E\\uDDEA Tournament API Tester\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runAllTests,\n        disabled: loading,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:opacity-50\",\n        children: \"Test Get APIs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testCreateTournament,\n        disabled: loading,\n        className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50\",\n        children: \"Test Create Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTestResults({}),\n        className: \"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\",\n        children: \"Clear Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-gray-600\",\n        children: \"Testing APIs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: Object.entries(testResults).map(([testName, result]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-300 rounded-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-lg\",\n            children: [result.success ? '✅' : '❌', \" \", testName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: result.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded p-3 overflow-auto max-h-96\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"text-sm\",\n            children: JSON.stringify(result.success ? result.data : result.error, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, testName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(TournamentAPITester, \"7dsCCjVL4FqBP5RiTO0xgdwkwtE=\");\n_c = TournamentAPITester;\nexport default TournamentAPITester;\nvar _c;\n$RefreshReg$(_c, \"TournamentAPITester\");","map":{"version":3,"names":["React","useState","tournamentServiceFixed","tournamentService","jsxDEV","_jsxDEV","TournamentAPITester","_s","testResults","setTestResults","loading","setLoading","testAPI","testName","apiCall","console","log","result","prev","success","data","timestamp","Date","toISOString","error","_error$response","_error$response2","message","status","response","runAllTests","getAllTournaments","page","limit","testCreateTournament","testData","name","description","sportType","maxTeams","startDate","endDate","registrationDeadline","location","rules","prizeInfo","contactInfo","createTournament","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Object","entries","map","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/components/debug/TournamentAPITester.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { tournamentServiceFixed as tournamentService } from '../../services/tournamentServiceFixed';\n\nconst TournamentAPITester = () => {\n  const [testResults, setTestResults] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const testAPI = async (testName, apiCall) => {\n    setLoading(true);\n    try {\n      console.log(`🧪 Testing ${testName}...`);\n      const result = await apiCall();\n      console.log(`✅ ${testName} success:`, result);\n      \n      setTestResults(prev => ({\n        ...prev,\n        [testName]: {\n          success: true,\n          data: result,\n          timestamp: new Date().toISOString()\n        }\n      }));\n    } catch (error) {\n      console.error(`❌ ${testName} failed:`, error);\n      \n      setTestResults(prev => ({\n        ...prev,\n        [testName]: {\n          success: false,\n          error: {\n            message: error.message,\n            status: error.response?.status,\n            data: error.response?.data\n          },\n          timestamp: new Date().toISOString()\n        }\n      }));\n    }\n    setLoading(false);\n  };\n\n  const runAllTests = async () => {\n    await testAPI('getAllTournaments', () => tournamentService.getAllTournaments());\n    await testAPI('getAllTournamentsWithParams', () => tournamentService.getAllTournaments({ page: 1, limit: 5 }));\n  };\n\n  const testCreateTournament = async () => {\n    const testData = {\n      name: 'API Test Tournament',\n      description: 'Test tournament created via API tester',\n      sportType: 'FOOTBALL',\n      maxTeams: 8,\n      startDate: [2024, 12, 25, 10, 0, 0],\n      endDate: [2024, 12, 25, 18, 0, 0],\n      registrationDeadline: [2024, 12, 20, 23, 59, 59],\n      location: 'Test Stadium',\n      rules: 'Test rules',\n      prizeInfo: 'Test prizes',\n      contactInfo: 'test@example.com'\n    };\n    \n    await testAPI('createTournament', () => tournamentService.createTournament(testData));\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg border border-gray-200 max-w-4xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">🧪 Tournament API Tester</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        <button\n          onClick={runAllTests}\n          disabled={loading}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:opacity-50\"\n        >\n          Test Get APIs\n        </button>\n        \n        <button\n          onClick={testCreateTournament}\n          disabled={loading}\n          className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50\"\n        >\n          Test Create Tournament\n        </button>\n        \n        <button\n          onClick={() => setTestResults({})}\n          className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\n        >\n          Clear Results\n        </button>\n      </div>\n\n      {loading && (\n        <div className=\"text-center py-4\">\n          <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n          <p className=\"mt-2 text-gray-600\">Testing APIs...</p>\n        </div>\n      )}\n\n      <div className=\"space-y-4\">\n        {Object.entries(testResults).map(([testName, result]) => (\n          <div key={testName} className=\"border border-gray-300 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h3 className=\"font-semibold text-lg\">\n                {result.success ? '✅' : '❌'} {testName}\n              </h3>\n              <span className=\"text-sm text-gray-500\">{result.timestamp}</span>\n            </div>\n            \n            <div className=\"bg-gray-100 rounded p-3 overflow-auto max-h-96\">\n              <pre className=\"text-sm\">\n                {JSON.stringify(\n                  result.success ? result.data : result.error, \n                  null, \n                  2\n                )}\n              </pre>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TournamentAPITester;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}