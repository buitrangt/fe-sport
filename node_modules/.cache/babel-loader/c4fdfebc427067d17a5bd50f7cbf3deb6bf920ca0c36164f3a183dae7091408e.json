{"ast":null,"code":"import _objectSpread from\"C:/Users/ACER/Desktop/fe/fe-edu/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{authService}from'../services';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const initialState={user:null,isAuthenticated:false,isLoading:true,error:null};const authReducer=(state,action)=>{switch(action.type){case'AUTH_START':return _objectSpread(_objectSpread({},state),{},{isLoading:true,error:null});case'AUTH_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,isAuthenticated:true,isLoading:false,error:null});case'AUTH_FAILURE':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:action.payload});case'AUTH_LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:null});case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:action.payload});default:return state;}};export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{checkAuth();},[]);const checkAuth=async()=>{const token=localStorage.getItem('accessToken');console.log('Checking auth with token:',token?'Token exists':'No token');if(!token){console.log('No token found, setting loading to false');dispatch({type:'SET_LOADING',payload:false});return;}try{// Validate token format first\nif(typeof token!=='string'||token.length<10){console.log('❌ Invalid token format, removing');localStorage.removeItem('accessToken');dispatch({type:'AUTH_FAILURE',payload:'Invalid token format'});return;}const response=await authService.getAccount();console.log('Account response:',response);// Handle both wrapped and unwrapped response formats\nlet userData=null;if(response&&response.success&&response.data){// Wrapped format: { success: true, data: { id, email, name, role } }\nuserData=response.data;console.log('✅ Wrapped format detected, user data:',userData);}else if(response&&response.id&&response.email){// Direct format: { id, email, name, role } (already unwrapped by API client)\nuserData=response;console.log('✅ Direct format detected, user data:',userData);}else{console.log('❌ Invalid response format:',response);localStorage.removeItem('accessToken');dispatch({type:'AUTH_FAILURE',payload:'Invalid token response'});return;}// Additional validation for user data\nif(!userData.id||!userData.email){console.log('❌ Incomplete user data, removing token');localStorage.removeItem('accessToken');dispatch({type:'AUTH_FAILURE',payload:'Incomplete user data'});return;}console.log('✅ Auth check successful, user data:',userData);dispatch({type:'AUTH_SUCCESS',payload:{user:userData}});}catch(error){var _error$response,_error$response2,_error$message,_error$message2;console.log('❌ Auth check failed:',error);// Clear token for any authentication errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401||((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403||(_error$message=error.message)!==null&&_error$message!==void 0&&_error$message.includes('token')||(_error$message2=error.message)!==null&&_error$message2!==void 0&&_error$message2.includes('unauthorized')){console.log('Authentication error, removing token');localStorage.removeItem('accessToken');}dispatch({type:'AUTH_FAILURE',payload:error.message});}};const login=async credentials=>{dispatch({type:'AUTH_START'});try{var _response$data,_response$data2;const response=await authService.login(credentials);console.log('=== LOGIN RESPONSE DEBUG ===');console.log('Full response:',response);console.log('response.success:',response===null||response===void 0?void 0:response.success);console.log('response.data:',response===null||response===void 0?void 0:response.data);console.log('response.data.accessToken:',response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.accessToken);console.log('response.data.user:',response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.user);console.log('Response keys:',Object.keys(response||{}));if(response!==null&&response!==void 0&&response.data){console.log('Data keys:',Object.keys(response.data||{}));}// Backend returns: { success: true, message: \"...\", data: { access_token: \"...\", user: {...} } }\nlet accessToken,user;if(response&&response.success&&response.data){// Standard backend format - try both field names\naccessToken=response.data.accessToken||response.data.access_token;user=response.data.user;console.log('Method 1 - Extracted accessToken:',accessToken?'Token received':'No token');console.log('Method 1 - Extracted user:',user);}else if(response&&response.data&&(response.data.accessToken||response.data.access_token)){// Alternative format: { data: { accessToken/access_token, user } }\naccessToken=response.data.accessToken||response.data.access_token;user=response.data.user;console.log('Method 2 - Extracted accessToken:',accessToken?'Token received':'No token');}else if(response&&(response.accessToken||response.access_token)){// Direct format: { accessToken/access_token, user }\naccessToken=response.accessToken||response.access_token;user=response.user;console.log('Method 3 - Extracted accessToken:',accessToken?'Token received':'No token');}else{console.error('Invalid login response format:',response);throw new Error('Invalid login response format');}if(!accessToken){console.error('❌ No access token found in response');console.error('Response structure:',JSON.stringify(response,null,2));throw new Error('No access token received');}if(!user){console.error('No user data found in response');throw new Error('No user data received');}console.log('✅ Storing token and user data...');localStorage.setItem('accessToken',accessToken);dispatch({type:'AUTH_SUCCESS',payload:{user}});console.log('✅ Login successful, user authenticated');return response;}catch(error){var _error$response3,_error$response3$data;console.error('❌ Login error:',error);console.error('❌ Error response:',error.response);dispatch({type:'AUTH_FAILURE',payload:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||error.message});throw error;}};const register=async userData=>{dispatch({type:'AUTH_START'});try{const response=await authService.register(userData);console.log('✅ Registration successful:',response);dispatch({type:'SET_LOADING',payload:false});return response;}catch(error){var _error$response4,_error$response4$data;console.error('❌ Registration failed:',error);dispatch({type:'AUTH_FAILURE',payload:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||error.message});throw error;}};const logout=async()=>{try{await authService.logout();}catch(error){// Continue with logout even if API call fails\nconsole.error('Logout error:',error);}finally{// Complete cleanup\nlocalStorage.removeItem('accessToken');localStorage.removeItem('user');localStorage.removeItem('refreshToken');// Clear any other auth-related data\nconst authKeys=['token','auth','session','login'];Object.keys(localStorage).forEach(key=>{if(authKeys.some(authKey=>key.toLowerCase().includes(authKey))){localStorage.removeItem(key);}});console.log('✅ Complete logout and localStorage cleanup');dispatch({type:'AUTH_LOGOUT'});}};const value=_objectSpread(_objectSpread({},state),{},{login,register,logout,checkAuth});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsx","_jsx","AuthContext","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","_objectSpread","payload","AuthProvider","_ref","children","dispatch","checkAuth","token","localStorage","getItem","console","log","length","removeItem","response","getAccount","userData","success","data","id","email","_error$response","_error$response2","_error$message","_error$message2","status","message","includes","login","credentials","_response$data","_response$data2","accessToken","Object","keys","access_token","Error","JSON","stringify","setItem","_error$response3","_error$response3$data","register","_error$response4","_error$response4$data","logout","authKeys","forEach","key","some","authKey","toLowerCase","value","Provider","useAuth","context"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return { ...state, isLoading: true, error: null };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('accessToken');\n    console.log('Checking auth with token:', token ? 'Token exists' : 'No token');\n    \n    if (!token) {\n      console.log('No token found, setting loading to false');\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return;\n    }\n\n    try {\n      // Validate token format first\n      if (typeof token !== 'string' || token.length < 10) {\n        console.log('❌ Invalid token format, removing');\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid token format' });\n        return;\n      }\n\n      const response = await authService.getAccount();\n      console.log('Account response:', response);\n      \n      // Handle both wrapped and unwrapped response formats\n      let userData = null;\n      \n      if (response && response.success && response.data) {\n        // Wrapped format: { success: true, data: { id, email, name, role } }\n        userData = response.data;\n        console.log('✅ Wrapped format detected, user data:', userData);\n      } else if (response && response.id && response.email) {\n        // Direct format: { id, email, name, role } (already unwrapped by API client)\n        userData = response;\n        console.log('✅ Direct format detected, user data:', userData);\n      } else {\n        console.log('❌ Invalid response format:', response);\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid token response' });\n        return;\n      }\n      \n      // Additional validation for user data\n      if (!userData.id || !userData.email) {\n        console.log('❌ Incomplete user data, removing token');\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Incomplete user data' });\n        return;\n      }\n      \n      console.log('✅ Auth check successful, user data:', userData);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: userData },\n      });\n    } catch (error) {\n      console.log('❌ Auth check failed:', error);\n      \n      // Clear token for any authentication errors\n      if (error.response?.status === 401 || \n          error.response?.status === 403 ||\n          error.message?.includes('token') ||\n          error.message?.includes('unauthorized')) {\n        console.log('Authentication error, removing token');\n        localStorage.removeItem('accessToken');\n      }\n      \n      dispatch({ type: 'AUTH_FAILURE', payload: error.message });\n    }\n  };\n\n  const login = async (credentials) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.login(credentials);\n      console.log('=== LOGIN RESPONSE DEBUG ===');\n      console.log('Full response:', response);\n      console.log('response.success:', response?.success);\n      console.log('response.data:', response?.data);\n      console.log('response.data.accessToken:', response?.data?.accessToken);\n      console.log('response.data.user:', response?.data?.user);\n      console.log('Response keys:', Object.keys(response || {}));\n      if (response?.data) {\n        console.log('Data keys:', Object.keys(response.data || {}));\n      }\n      \n      // Backend returns: { success: true, message: \"...\", data: { access_token: \"...\", user: {...} } }\n      let accessToken, user;\n      \n      if (response && response.success && response.data) {\n        // Standard backend format - try both field names\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 1 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n        console.log('Method 1 - Extracted user:', user);\n      } else if (response && response.data && (response.data.accessToken || response.data.access_token)) {\n        // Alternative format: { data: { accessToken/access_token, user } }\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 2 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else if (response && (response.accessToken || response.access_token)) {\n        // Direct format: { accessToken/access_token, user }\n        accessToken = response.accessToken || response.access_token;\n        user = response.user;\n        console.log('Method 3 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else {\n        console.error('Invalid login response format:', response);\n        throw new Error('Invalid login response format');\n      }\n      \n      if (!accessToken) {\n        console.error('❌ No access token found in response');\n        console.error('Response structure:', JSON.stringify(response, null, 2));\n        throw new Error('No access token received');\n      }\n      \n      if (!user) {\n        console.error('No user data found in response');\n        throw new Error('No user data received');\n      }\n      \n      console.log('✅ Storing token and user data...');\n      localStorage.setItem('accessToken', accessToken);\n      \n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user },\n      });\n      \n      console.log('✅ Login successful, user authenticated');\n      return response;\n    } catch (error) {\n      console.error('❌ Login error:', error);\n      console.error('❌ Error response:', error.response);\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.register(userData);\n      console.log('✅ Registration successful:', response);\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return response;\n    } catch (error) {\n      console.error('❌ Registration failed:', error);\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout error:', error);\n    } finally {\n      // Complete cleanup\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('user');\n      localStorage.removeItem('refreshToken');\n      \n      // Clear any other auth-related data\n      const authKeys = ['token', 'auth', 'session', 'login'];\n      Object.keys(localStorage).forEach(key => {\n        if (authKeys.some(authKey => key.toLowerCase().includes(authKey))) {\n          localStorage.removeItem(key);\n        }\n      });\n      \n      console.log('✅ Complete logout and localStorage cleanup');\n      dispatch({ type: 'AUTH_LOGOUT' });\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}