{"ast":null,"code":"import apiClient from'./apiClient';import{createFileUploadConfig}from'./apiClient';const API_BASE_PATH='/api/v1/news';const newsService={// Get all news articles\ngetAllNews:async()=>{try{const newsList=await apiClient.get(API_BASE_PATH);return newsList;}catch(error){console.error(\"Error fetching all news:\",error);throw error;}},// Get news by ID\ngetNewsById:async id=>{try{const newsArticle=await apiClient.get(\"\".concat(API_BASE_PATH,\"/\").concat(id));return newsArticle;}catch(error){console.error(\"Error fetching news with ID \".concat(id,\":\"),error);throw error;}},createNews:async newsData=>{try{const response=await apiClient.post(API_BASE_PATH,newsData);return response.data||response;}catch(error){console.error(\"Error creating news:\",error);throw error;}},// Update a news article\nupdateNews:async(id,newsData)=>{try{const response=await apiClient.put(\"\".concat(API_BASE_PATH,\"/\").concat(id),newsData);return response;}catch(error){console.error(\"Error updating news with ID \".concat(id,\":\"),error);throw error;}},// Delete a news article\ndeleteNews:async id=>{try{const response=await apiClient.delete(\"\".concat(API_BASE_PATH,\"/\").concat(id));return response;}catch(error){console.error(\"Error deleting news with ID \".concat(id,\":\"),error);throw error;}},uploadNewsAttachments:async(newsId,file,onUploadProgress)=>{try{const formData=new FormData();formData.append('files',file);const config=createFileUploadConfig(onUploadProgress);const response=await apiClient.post(\"\".concat(API_BASE_PATH,\"/uploads/\").concat(newsId),formData,config);return response;}catch(error){console.error(\"Error uploading attachment for news ID \".concat(newsId,\":\"),error);throw error;}},getImageUrl:imageName=>{return\"\".concat(process.env.REACT_APP_API_URL||'http://localhost:8080').concat(API_BASE_PATH,\"/image/\").concat(imageName);}};export default newsService;","map":{"version":3,"names":["apiClient","createFileUploadConfig","API_BASE_PATH","newsService","getAllNews","newsList","get","error","console","getNewsById","id","newsArticle","concat","createNews","newsData","response","post","data","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","file","onUploadProgress","formData","FormData","append","config","getImageUrl","imageName","process","env","REACT_APP_API_URL"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/services/newsService.js"],"sourcesContent":["import apiClient from './apiClient'; \r\nimport { createFileUploadConfig } from './apiClient'; \r\n\r\nconst API_BASE_PATH = '/api/v1/news';\r\n\r\nconst newsService = {\r\n  // Get all news articles\r\n  getAllNews: async () => {\r\n    try {\r\n\r\n      const newsList = await apiClient.get(API_BASE_PATH);\r\n      return newsList;\r\n    } catch (error) {\r\n      console.error(\"Error fetching all news:\", error);\r\n      throw error; \r\n    }\r\n  },\r\n\r\n  // Get news by ID\r\n  getNewsById: async (id) => {\r\n    try {\r\n      const newsArticle = await apiClient.get(`${API_BASE_PATH}/${id}`);\r\n      return newsArticle;\r\n    } catch (error) {\r\n      console.error(`Error fetching news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createNews: async (newsData) => {\r\n    try {\r\n      const response = await apiClient.post(API_BASE_PATH, newsData);\r\n      return response.data || response;\r\n    } catch (error) {\r\n      console.error(\"Error creating news:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update a news article\r\n  updateNews: async (id, newsData) => {\r\n    try {\r\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error updating news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a news article\r\n  deleteNews: async (id) => {\r\n    try {\r\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error deleting news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('files', file); \r\n\r\n      const config = createFileUploadConfig(onUploadProgress);\r\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getImageUrl: (imageName) => {\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\r\n  }\r\n};\r\n\r\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}