{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\fe\\\\fe-edu\\\\src\\\\components\\\\UltimateDOMErrorSuppressor.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UltimateDOMErrorSuppressor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.suppressDOMErrors = () => {\n      // Hide any existing error overlays\n      setTimeout(() => {\n        try {\n          const errorElements = document.querySelectorAll('*');\n          errorElements.forEach(el => {\n            if (el.textContent && el.textContent.includes('insertBefore')) {\n              el.style.display = 'none';\n              console.debug('üõ°Ô∏è Hidden DOM error element');\n            }\n          });\n        } catch (e) {\n          // Ignore cleanup errors\n        }\n      }, 100);\n    };\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      shouldShowError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Check if this is a DOM manipulation error that should be completely hidden\n    if (error && error.message) {\n      const message = error.message.toLowerCase();\n      const isDOMError = message.includes('insertbefore') || message.includes('appendchild') || message.includes('removechild') || message.includes('cannot deserialize') || message.includes('json parse error') || message.includes('notfounderror') || message.includes('node') || message.includes('commitplacement') || message.includes('commitmutationeffects') || message.includes('bundle.js');\n      if (isDOMError) {\n        console.debug('üõ°Ô∏è DOM error completely suppressed by ErrorBoundary:', error.message);\n        // Return normal state - completely hide DOM errors from user\n        return {\n          hasError: false,\n          shouldShowError: false,\n          error: null,\n          errorInfo: null\n        };\n      }\n    }\n\n    // Only show error UI for actual application errors\n    return {\n      hasError: true,\n      shouldShowError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // Check if this is a DOM manipulation error\n    if (error && error.message) {\n      const message = error.message.toLowerCase();\n      const isDOMError = message.includes('insertbefore') || message.includes('appendchild') || message.includes('removechild') || message.includes('cannot deserialize') || message.includes('json parse error') || message.includes('notfounderror') || message.includes('node') || message.includes('commitplacement') || message.includes('commitmutationeffects') || message.includes('bundle.js');\n      if (isDOMError) {\n        console.debug('üõ°Ô∏è DOM error caught and COMPLETELY SUPPRESSED:', error.message);\n        // Do not set any error state for DOM errors\n        this.setState({\n          hasError: false,\n          shouldShowError: false,\n          error: null,\n          errorInfo: null\n        });\n\n        // Prevent any error propagation\n        return;\n      }\n    }\n\n    // Only set error state for real application errors\n    console.error('‚ùå Real application error caught:', error);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n      hasError: true,\n      shouldShowError: true\n    });\n  }\n  componentDidMount() {\n    // Additional DOM error suppression at mount\n    this.suppressDOMErrors();\n  }\n  render() {\n    // Only show error UI for non-DOM errors that should be displayed\n    if (this.state.hasError && this.state.shouldShowError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-50 p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md w-full bg-white shadow-lg rounded-lg p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-gray-900 mb-4\",\n              children: \"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i \\u1EE9ng d\\u1EE5ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mb-4\",\n              children: \"Vui l\\xF2ng th\\u1EED l\\u1EA1i ho\\u1EB7c li\\xEAn h\\u1EC7 h\\u1ED7 tr\\u1EE3.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.location.reload(),\n              className: \"bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700\",\n              children: \"T\\u1EA3i l\\u1EA1i trang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n\n    // For DOM errors or no errors, render children normally\n    return this.props.children;\n  }\n}\nexport default UltimateDOMErrorSuppressor;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UltimateDOMErrorSuppressor","Component","constructor","props","suppressDOMErrors","setTimeout","errorElements","document","querySelectorAll","forEach","el","textContent","includes","style","display","console","debug","e","state","hasError","error","errorInfo","shouldShowError","getDerivedStateFromError","message","toLowerCase","isDOMError","componentDidCatch","setState","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/components/UltimateDOMErrorSuppressor.js"],"sourcesContent":["import React from 'react';\n\nclass UltimateDOMErrorSuppressor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false, \n      error: null, \n      errorInfo: null,\n      shouldShowError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Check if this is a DOM manipulation error that should be completely hidden\n    if (error && error.message) {\n      const message = error.message.toLowerCase();\n      const isDOMError = \n        message.includes('insertbefore') ||\n        message.includes('appendchild') ||\n        message.includes('removechild') ||\n        message.includes('cannot deserialize') ||\n        message.includes('json parse error') ||\n        message.includes('notfounderror') ||\n        message.includes('node') ||\n        message.includes('commitplacement') ||\n        message.includes('commitmutationeffects') ||\n        message.includes('bundle.js');\n      \n      if (isDOMError) {\n        console.debug('üõ°Ô∏è DOM error completely suppressed by ErrorBoundary:', error.message);\n        // Return normal state - completely hide DOM errors from user\n        return { \n          hasError: false, \n          shouldShowError: false,\n          error: null,\n          errorInfo: null \n        };\n      }\n    }\n    \n    // Only show error UI for actual application errors\n    return { \n      hasError: true, \n      shouldShowError: true \n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Check if this is a DOM manipulation error\n    if (error && error.message) {\n      const message = error.message.toLowerCase();\n      const isDOMError = \n        message.includes('insertbefore') ||\n        message.includes('appendchild') ||\n        message.includes('removechild') ||\n        message.includes('cannot deserialize') ||\n        message.includes('json parse error') ||\n        message.includes('notfounderror') ||\n        message.includes('node') ||\n        message.includes('commitplacement') ||\n        message.includes('commitmutationeffects') ||\n        message.includes('bundle.js');\n      \n      if (isDOMError) {\n        console.debug('üõ°Ô∏è DOM error caught and COMPLETELY SUPPRESSED:', error.message);\n        // Do not set any error state for DOM errors\n        this.setState({ \n          hasError: false, \n          shouldShowError: false,\n          error: null,\n          errorInfo: null \n        });\n        \n        // Prevent any error propagation\n        return;\n      }\n    }\n    \n    // Only set error state for real application errors\n    console.error('‚ùå Real application error caught:', error);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n      hasError: true,\n      shouldShowError: true\n    });\n  }\n\n  componentDidMount() {\n    // Additional DOM error suppression at mount\n    this.suppressDOMErrors();\n  }\n\n  suppressDOMErrors = () => {\n    // Hide any existing error overlays\n    setTimeout(() => {\n      try {\n        const errorElements = document.querySelectorAll('*');\n        errorElements.forEach(el => {\n          if (el.textContent && el.textContent.includes('insertBefore')) {\n            el.style.display = 'none';\n            console.debug('üõ°Ô∏è Hidden DOM error element');\n          }\n        });\n      } catch (e) {\n        // Ignore cleanup errors\n      }\n    }, 100);\n  };\n\n  render() {\n    // Only show error UI for non-DOM errors that should be displayed\n    if (this.state.hasError && this.state.shouldShowError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50 p-4\">\n          <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                ƒê√£ x·∫£y ra l·ªói ·ª©ng d·ª•ng\n              </h3>\n              <p className=\"text-sm text-gray-500 mb-4\">\n                Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c li√™n h·ªá h·ªó tr·ª£.\n              </p>\n              <button\n                onClick={() => window.location.reload()}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700\"\n              >\n                T·∫£i l·∫°i trang\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // For DOM errors or no errors, render children normally\n    return this.props.children;\n  }\n}\n\nexport default UltimateDOMErrorSuppressor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}