{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport { initializeLocalStorage } from './utils/localStorageManager';\n\n// ============================================\n// REBUILD DOM STRATEGY + AUTH MANAGEMENT\n// ============================================\nconsole.log('üîÑ Starting application with clean DOM and auth management...');\n\n// Initialize localStorage management FIRST\ninitializeLocalStorage();\n\n// üè† FORCE HOME URL ON STARTUP\nif (window.location.pathname !== '/') {\n  console.log('üè† [STARTUP] Force redirect to home from:', window.location.pathname);\n  window.history.replaceState({}, '', '/');\n}\n\n// 1. CLEAR ALL EXISTING DOM COMPLETELY\nconst clearExistingDOM = () => {\n  try {\n    // Clear all existing React roots\n    const existingRoots = document.querySelectorAll('[data-reactroot]');\n    existingRoots.forEach(root => root.remove());\n\n    // Clear any portal containers\n    const portals = document.querySelectorAll('[id*=\"portal\"], [class*=\"portal\"]');\n    portals.forEach(portal => portal.remove());\n\n    // Clear any modal containers\n    const modals = document.querySelectorAll('[id*=\"modal\"], [class*=\"modal\"]');\n    modals.forEach(modal => modal.remove());\n\n    // Clear any overlay containers\n    const overlays = document.querySelectorAll('[class*=\"overlay\"], [id*=\"overlay\"]');\n    overlays.forEach(overlay => overlay.remove());\n    console.log('üßπ DOM cleared completely');\n  } catch (e) {\n    console.log('üßπ DOM clear completed (with minor errors)');\n  }\n};\n\n// 2. FORCE CLEAN THE ROOT ELEMENT\nconst prepareCleanRoot = () => {\n  const rootElement = document.getElementById('root');\n  if (rootElement) {\n    // Clear all children\n    rootElement.innerHTML = '';\n\n    // Remove all attributes except id\n    const attributes = Array.from(rootElement.attributes);\n    attributes.forEach(attr => {\n      if (attr.name !== 'id') {\n        rootElement.removeAttribute(attr.name);\n      }\n    });\n\n    // Reset any styles\n    rootElement.style.cssText = '';\n    console.log('üéØ Root element prepared clean');\n  }\n};\n\n// 3. MINIMAL ERROR SUPPRESSION (only console)\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  const message = args.join(' ');\n  if (message.includes('insertBefore') || message.includes('commitPlacement') || message.includes('NotFoundError')) {\n    console.debug('üîá DOM error suppressed:', message);\n    return;\n  }\n  originalConsoleError(...args);\n};\n\n// 4. SIMPLE QUERY CLIENT\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      // Disable retry to prevent DOM conflicts\n      refetchOnWindowFocus: false,\n      staleTime: 30000\n    },\n    mutations: {\n      retry: false\n    }\n  }\n});\n\n// 5. FORCE SYNCHRONOUS RENDERING\nconst forceSync = () => {\n  if (window.React && window.React.version) {\n    console.log('‚ö° React version:', window.React.version);\n  }\n\n  // Force synchronous updates (disable concurrent mode)\n  if (window.ReactDOM && window.ReactDOM.createRoot) {\n    console.log('‚ö° Using createRoot (React 18)');\n  }\n};\n\n// 6. EXECUTE CLEANUP\nclearExistingDOM();\nprepareCleanRoot();\nforceSync();\n\n// 7. WAIT FOR DOM TO SETTLE BEFORE RENDERING\nsetTimeout(() => {\n  const rootElement = document.getElementById('root');\n  if (!rootElement) {\n    console.error('‚ùå Root element not found!');\n    return;\n  }\n  console.log('üöÄ Starting React app with clean DOM...');\n  try {\n    // Create fresh root\n    const root = ReactDOM.createRoot(rootElement);\n\n    // Render with absolute minimal structure\n    root.render(/*#__PURE__*/React.createElement(QueryClientProvider, {\n      client: queryClient\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {}, /*#__PURE__*/React.createElement(AuthProvider, {}, /*#__PURE__*/React.createElement(App)))));\n    console.log('‚úÖ React app rendered successfully');\n  } catch (error) {\n    console.error('‚ùå Failed to render React app:', error);\n\n    // Fallback: try basic HTML\n    rootElement.innerHTML = `\n      <div style=\"padding: 20px; text-align: center;\">\n        <h1>Loading Error</h1>\n        <p>Failed to load the application. Please refresh the page.</p>\n        <button onclick=\"window.location.reload()\">Refresh Page</button>\n      </div>\n    `;\n  }\n}, 100); // Small delay to ensure DOM is ready\n\nconsole.log('üîÑ DOM REBUILD strategy initialized');","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","QueryClient","QueryClientProvider","App","AuthProvider","initializeLocalStorage","console","log","window","location","pathname","history","replaceState","clearExistingDOM","existingRoots","document","querySelectorAll","forEach","root","remove","portals","portal","modals","modal","overlays","overlay","e","prepareCleanRoot","rootElement","getElementById","innerHTML","attributes","Array","from","attr","name","removeAttribute","style","cssText","originalConsoleError","error","args","message","join","includes","debug","queryClient","defaultOptions","queries","retry","refetchOnWindowFocus","staleTime","mutations","forceSync","version","createRoot","setTimeout","render","createElement","client"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/AuthContext';\nimport { initializeLocalStorage } from './utils/localStorageManager';\n\n// ============================================\n// REBUILD DOM STRATEGY + AUTH MANAGEMENT\n// ============================================\nconsole.log('üîÑ Starting application with clean DOM and auth management...');\n\n// Initialize localStorage management FIRST\ninitializeLocalStorage();\n\n// üè† FORCE HOME URL ON STARTUP\nif (window.location.pathname !== '/') {\n  console.log('üè† [STARTUP] Force redirect to home from:', window.location.pathname);\n  window.history.replaceState({}, '', '/');\n}\n\n// 1. CLEAR ALL EXISTING DOM COMPLETELY\nconst clearExistingDOM = () => {\n  try {\n    // Clear all existing React roots\n    const existingRoots = document.querySelectorAll('[data-reactroot]');\n    existingRoots.forEach(root => root.remove());\n    \n    // Clear any portal containers\n    const portals = document.querySelectorAll('[id*=\"portal\"], [class*=\"portal\"]');\n    portals.forEach(portal => portal.remove());\n    \n    // Clear any modal containers\n    const modals = document.querySelectorAll('[id*=\"modal\"], [class*=\"modal\"]');\n    modals.forEach(modal => modal.remove());\n    \n    // Clear any overlay containers\n    const overlays = document.querySelectorAll('[class*=\"overlay\"], [id*=\"overlay\"]');\n    overlays.forEach(overlay => overlay.remove());\n    \n    console.log('üßπ DOM cleared completely');\n  } catch (e) {\n    console.log('üßπ DOM clear completed (with minor errors)');\n  }\n};\n\n// 2. FORCE CLEAN THE ROOT ELEMENT\nconst prepareCleanRoot = () => {\n  const rootElement = document.getElementById('root');\n  if (rootElement) {\n    // Clear all children\n    rootElement.innerHTML = '';\n    \n    // Remove all attributes except id\n    const attributes = Array.from(rootElement.attributes);\n    attributes.forEach(attr => {\n      if (attr.name !== 'id') {\n        rootElement.removeAttribute(attr.name);\n      }\n    });\n    \n    // Reset any styles\n    rootElement.style.cssText = '';\n    \n    console.log('üéØ Root element prepared clean');\n  }\n};\n\n// 3. MINIMAL ERROR SUPPRESSION (only console)\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  const message = args.join(' ');\n  if (message.includes('insertBefore') || \n      message.includes('commitPlacement') ||\n      message.includes('NotFoundError')) {\n    console.debug('üîá DOM error suppressed:', message);\n    return;\n  }\n  originalConsoleError(...args);\n};\n\n// 4. SIMPLE QUERY CLIENT\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false, // Disable retry to prevent DOM conflicts\n      refetchOnWindowFocus: false,\n      staleTime: 30000,\n    },\n    mutations: {\n      retry: false,\n    }\n  },\n});\n\n// 5. FORCE SYNCHRONOUS RENDERING\nconst forceSync = () => {\n  if (window.React && window.React.version) {\n    console.log('‚ö° React version:', window.React.version);\n  }\n  \n  // Force synchronous updates (disable concurrent mode)\n  if (window.ReactDOM && window.ReactDOM.createRoot) {\n    console.log('‚ö° Using createRoot (React 18)');\n  }\n};\n\n// 6. EXECUTE CLEANUP\nclearExistingDOM();\nprepareCleanRoot();\nforceSync();\n\n// 7. WAIT FOR DOM TO SETTLE BEFORE RENDERING\nsetTimeout(() => {\n  const rootElement = document.getElementById('root');\n  \n  if (!rootElement) {\n    console.error('‚ùå Root element not found!');\n    return;\n  }\n  \n  console.log('üöÄ Starting React app with clean DOM...');\n  \n  try {\n    // Create fresh root\n    const root = ReactDOM.createRoot(rootElement);\n    \n    // Render with absolute minimal structure\n    root.render(\n      React.createElement(\n        QueryClientProvider,\n        { client: queryClient },\n        React.createElement(\n          BrowserRouter,\n          {},\n          React.createElement(\n            AuthProvider,\n            {},\n            React.createElement(App)\n          )\n        )\n      )\n    );\n    \n    console.log('‚úÖ React app rendered successfully');\n    \n  } catch (error) {\n    console.error('‚ùå Failed to render React app:', error);\n    \n    // Fallback: try basic HTML\n    rootElement.innerHTML = `\n      <div style=\"padding: 20px; text-align: center;\">\n        <h1>Loading Error</h1>\n        <p>Failed to load the application. Please refresh the page.</p>\n        <button onclick=\"window.location.reload()\">Refresh Page</button>\n      </div>\n    `;\n  }\n  \n}, 100); // Small delay to ensure DOM is ready\n\nconsole.log('üîÑ DOM REBUILD strategy initialized');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}