{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\fe\\\\fe-edu\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    // üîê FORCE CLEAR TOKEN ON STARTUP\n    console.log('üîê Force clearing tokens on app startup...');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('user');\n    localStorage.removeItem('refreshToken');\n\n    // üè† FORCE NAVIGATE TO HOME\n    if (window.location.pathname !== '/') {\n      console.log('üè† Force redirecting to home from:', window.location.pathname);\n      window.history.replaceState({}, '', '/');\n      // Force reload to ensure clean state\n      window.location.reload();\n      return;\n    }\n\n    // Set loading to false since we're not checking auth\n    dispatch({\n      type: 'SET_LOADING',\n      payload: false\n    });\n    console.log('‚úÖ App started in guest mode at home page');\n\n    // Uncomment below if you want to check auth instead of force logout\n    // checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('accessToken');\n    console.log('Checking auth with token:', token ? 'Token exists' : 'No token');\n    if (!token) {\n      console.log('No token found, setting loading to false');\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return;\n    }\n    try {\n      // Validate token format first\n      if (typeof token !== 'string' || token.length < 10) {\n        console.log('‚ùå Invalid token format, removing');\n        localStorage.removeItem('accessToken');\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: 'Invalid token format'\n        });\n        return;\n      }\n      const response = await authService.getAccount();\n      console.log('Account response:', response);\n\n      // Handle both wrapped and unwrapped response formats\n      let userData = null;\n      if (response && response.success && response.data) {\n        // Wrapped format: { success: true, data: { id, email, name, role } }\n        userData = response.data;\n        console.log('‚úÖ Wrapped format detected, user data:', userData);\n      } else if (response && response.id && response.email) {\n        // Direct format: { id, email, name, role } (already unwrapped by API client)\n        userData = response;\n        console.log('‚úÖ Direct format detected, user data:', userData);\n      } else {\n        console.log('‚ùå Invalid response format:', response);\n        localStorage.removeItem('accessToken');\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: 'Invalid token response'\n        });\n        return;\n      }\n\n      // Additional validation for user data\n      if (!userData.id || !userData.email) {\n        console.log('‚ùå Incomplete user data, removing token');\n        localStorage.removeItem('accessToken');\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: 'Incomplete user data'\n        });\n        return;\n      }\n      console.log('‚úÖ Auth check successful, user data:', userData);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: userData\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response2, _error$message, _error$message2;\n      console.log('‚ùå Auth check failed:', error);\n\n      // Clear token for any authentication errors\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403 || (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('token') || (_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('unauthorized')) {\n        console.log('Authentication error, removing token');\n        localStorage.removeItem('accessToken');\n      }\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n  const login = async credentials => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      var _response$data, _response$data2;\n      const response = await authService.login(credentials);\n      console.log('=== LOGIN RESPONSE DEBUG ===');\n      console.log('Full response:', response);\n      console.log('response.success:', response === null || response === void 0 ? void 0 : response.success);\n      console.log('response.data:', response === null || response === void 0 ? void 0 : response.data);\n      console.log('response.data.accessToken:', response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.accessToken);\n      console.log('response.data.user:', response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.user);\n      console.log('Response keys:', Object.keys(response || {}));\n      if (response !== null && response !== void 0 && response.data) {\n        console.log('Data keys:', Object.keys(response.data || {}));\n      }\n\n      // Backend returns: { success: true, message: \"...\", data: { access_token: \"...\", user: {...} } }\n      let accessToken, user;\n      if (response && response.success && response.data) {\n        // Standard backend format - try both field names\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 1 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n        console.log('Method 1 - Extracted user:', user);\n      } else if (response && response.data && (response.data.accessToken || response.data.access_token)) {\n        // Alternative format: { data: { accessToken/access_token, user } }\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 2 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else if (response && (response.accessToken || response.access_token)) {\n        // Direct format: { accessToken/access_token, user }\n        accessToken = response.accessToken || response.access_token;\n        user = response.user;\n        console.log('Method 3 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else {\n        console.error('Invalid login response format:', response);\n        throw new Error('Invalid login response format');\n      }\n      if (!accessToken) {\n        console.error('‚ùå No access token found in response');\n        console.error('Response structure:', JSON.stringify(response, null, 2));\n        throw new Error('No access token received');\n      }\n      if (!user) {\n        console.error('No user data found in response');\n        throw new Error('No user data received');\n      }\n      console.log('‚úÖ Storing token and user data...');\n      localStorage.setItem('accessToken', accessToken);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user\n        }\n      });\n      console.log('‚úÖ Login successful, user authenticated');\n      return response;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('‚ùå Login error:', error);\n      console.error('‚ùå Error response:', error.response);\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authService.register(userData);\n      console.log('‚úÖ Registration successful:', response);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return response;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('‚ùå Registration failed:', error);\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout error:', error);\n    } finally {\n      // Complete cleanup\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('user');\n      localStorage.removeItem('refreshToken');\n\n      // Clear any other auth-related data\n      const authKeys = ['token', 'auth', 'session', 'login'];\n      Object.keys(localStorage).forEach(key => {\n        if (authKeys.some(authKey => key.toLowerCase().includes(authKey))) {\n          localStorage.removeItem(key);\n        }\n      });\n      console.log('‚úÖ Complete logout and localStorage cleanup');\n      dispatch({\n        type: 'AUTH_LOGOUT'\n      });\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","console","log","localStorage","removeItem","window","location","pathname","history","replaceState","reload","checkAuth","token","getItem","length","response","getAccount","userData","success","data","id","email","_error$response","_error$response2","_error$message","_error$message2","status","message","includes","login","credentials","_response$data","_response$data2","accessToken","Object","keys","access_token","Error","JSON","stringify","setItem","_error$response3","_error$response3$data","register","_error$response4","_error$response4$data","logout","authKeys","forEach","key","some","authKey","toLowerCase","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return { ...state, isLoading: true, error: null };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // üîê FORCE CLEAR TOKEN ON STARTUP\n    console.log('üîê Force clearing tokens on app startup...');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('user');\n    localStorage.removeItem('refreshToken');\n    \n    // üè† FORCE NAVIGATE TO HOME\n    if (window.location.pathname !== '/') {\n      console.log('üè† Force redirecting to home from:', window.location.pathname);\n      window.history.replaceState({}, '', '/');\n      // Force reload to ensure clean state\n      window.location.reload();\n      return;\n    }\n    \n    // Set loading to false since we're not checking auth\n    dispatch({ type: 'SET_LOADING', payload: false });\n    \n    console.log('‚úÖ App started in guest mode at home page');\n    \n    // Uncomment below if you want to check auth instead of force logout\n    // checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('accessToken');\n    console.log('Checking auth with token:', token ? 'Token exists' : 'No token');\n    \n    if (!token) {\n      console.log('No token found, setting loading to false');\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return;\n    }\n\n    try {\n      // Validate token format first\n      if (typeof token !== 'string' || token.length < 10) {\n        console.log('‚ùå Invalid token format, removing');\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid token format' });\n        return;\n      }\n\n      const response = await authService.getAccount();\n      console.log('Account response:', response);\n      \n      // Handle both wrapped and unwrapped response formats\n      let userData = null;\n      \n      if (response && response.success && response.data) {\n        // Wrapped format: { success: true, data: { id, email, name, role } }\n        userData = response.data;\n        console.log('‚úÖ Wrapped format detected, user data:', userData);\n      } else if (response && response.id && response.email) {\n        // Direct format: { id, email, name, role } (already unwrapped by API client)\n        userData = response;\n        console.log('‚úÖ Direct format detected, user data:', userData);\n      } else {\n        console.log('‚ùå Invalid response format:', response);\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Invalid token response' });\n        return;\n      }\n      \n      // Additional validation for user data\n      if (!userData.id || !userData.email) {\n        console.log('‚ùå Incomplete user data, removing token');\n        localStorage.removeItem('accessToken');\n        dispatch({ type: 'AUTH_FAILURE', payload: 'Incomplete user data' });\n        return;\n      }\n      \n      console.log('‚úÖ Auth check successful, user data:', userData);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: userData },\n      });\n    } catch (error) {\n      console.log('‚ùå Auth check failed:', error);\n      \n      // Clear token for any authentication errors\n      if (error.response?.status === 401 || \n          error.response?.status === 403 ||\n          error.message?.includes('token') ||\n          error.message?.includes('unauthorized')) {\n        console.log('Authentication error, removing token');\n        localStorage.removeItem('accessToken');\n      }\n      \n      dispatch({ type: 'AUTH_FAILURE', payload: error.message });\n    }\n  };\n\n  const login = async (credentials) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.login(credentials);\n      console.log('=== LOGIN RESPONSE DEBUG ===');\n      console.log('Full response:', response);\n      console.log('response.success:', response?.success);\n      console.log('response.data:', response?.data);\n      console.log('response.data.accessToken:', response?.data?.accessToken);\n      console.log('response.data.user:', response?.data?.user);\n      console.log('Response keys:', Object.keys(response || {}));\n      if (response?.data) {\n        console.log('Data keys:', Object.keys(response.data || {}));\n      }\n      \n      // Backend returns: { success: true, message: \"...\", data: { access_token: \"...\", user: {...} } }\n      let accessToken, user;\n      \n      if (response && response.success && response.data) {\n        // Standard backend format - try both field names\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 1 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n        console.log('Method 1 - Extracted user:', user);\n      } else if (response && response.data && (response.data.accessToken || response.data.access_token)) {\n        // Alternative format: { data: { accessToken/access_token, user } }\n        accessToken = response.data.accessToken || response.data.access_token;\n        user = response.data.user;\n        console.log('Method 2 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else if (response && (response.accessToken || response.access_token)) {\n        // Direct format: { accessToken/access_token, user }\n        accessToken = response.accessToken || response.access_token;\n        user = response.user;\n        console.log('Method 3 - Extracted accessToken:', accessToken ? 'Token received' : 'No token');\n      } else {\n        console.error('Invalid login response format:', response);\n        throw new Error('Invalid login response format');\n      }\n      \n      if (!accessToken) {\n        console.error('‚ùå No access token found in response');\n        console.error('Response structure:', JSON.stringify(response, null, 2));\n        throw new Error('No access token received');\n      }\n      \n      if (!user) {\n        console.error('No user data found in response');\n        throw new Error('No user data received');\n      }\n      \n      console.log('‚úÖ Storing token and user data...');\n      localStorage.setItem('accessToken', accessToken);\n      \n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user },\n      });\n      \n      console.log('‚úÖ Login successful, user authenticated');\n      return response;\n    } catch (error) {\n      console.error('‚ùå Login error:', error);\n      console.error('‚ùå Error response:', error.response);\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      const response = await authService.register(userData);\n      console.log('‚úÖ Registration successful:', response);\n      dispatch({ type: 'SET_LOADING', payload: false });\n      return response;\n    } catch (error) {\n      console.error('‚ùå Registration failed:', error);\n      dispatch({ type: 'AUTH_FAILURE', payload: error.response?.data?.message || error.message });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Continue with logout even if API call fails\n      console.error('Logout error:', error);\n    } finally {\n      // Complete cleanup\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('user');\n      localStorage.removeItem('refreshToken');\n      \n      // Clear any other auth-related data\n      const authKeys = ['token', 'auth', 'session', 'login'];\n      Object.keys(localStorage).forEach(key => {\n        if (authKeys.some(authKey => key.toLowerCase().includes(authKey))) {\n          localStorage.removeItem(key);\n        }\n      });\n      \n      console.log('‚úÖ Complete logout and localStorage cleanup');\n      dispatch({ type: 'AUTH_LOGOUT' });\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}