{"ast":null,"code":"import apiClient from './apiClient';\nimport { createFileUploadConfig } from './apiClient';\nconst API_BASE_PATH = '/api/v1/news';\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      console.log('🔗 [NewsService] Calling API:', API_BASE_PATH);\n      console.log('🔗 [NewsService] Full URL:', `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}`);\n      const newsList = await apiClient.get(API_BASE_PATH);\n      console.log('✅ [NewsService] API Success:', newsList);\n      console.log('✅ [NewsService] Response type:', typeof newsList);\n      console.log('✅ [NewsService] Response keys:', Object.keys(newsList || {}));\n      return newsList;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('❌ [NewsService] API Error:', error);\n      console.error('❌ [NewsService] Error status:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      console.error('❌ [NewsService] Error data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const newsArticle = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      return newsArticle;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      return response.data || response;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      return response;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      return response;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    try {\n      const formData = new FormData();\n      formData.append('files', file);\n      const config = createFileUploadConfig(onUploadProgress);\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response;\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  getImageUrl: imageName => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\nexport default newsService;","map":{"version":3,"names":["apiClient","createFileUploadConfig","API_BASE_PATH","newsService","getAllNews","console","log","process","env","REACT_APP_API_URL","newsList","get","Object","keys","error","_error$response","_error$response2","response","status","data","getNewsById","id","newsArticle","createNews","newsData","post","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","file","onUploadProgress","formData","FormData","append","config","getImageUrl","imageName"],"sources":["C:/Users/ACER/Desktop/fe/fe-edu/src/services/newsService.js"],"sourcesContent":["import apiClient from './apiClient'; \nimport { createFileUploadConfig } from './apiClient'; \n\nconst API_BASE_PATH = '/api/v1/news';\n\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      console.log('🔗 [NewsService] Calling API:', API_BASE_PATH);\n      console.log('🔗 [NewsService] Full URL:', `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}`);\n      \n      const newsList = await apiClient.get(API_BASE_PATH);\n      console.log('✅ [NewsService] API Success:', newsList);\n      console.log('✅ [NewsService] Response type:', typeof newsList);\n      console.log('✅ [NewsService] Response keys:', Object.keys(newsList || {}));\n      return newsList;\n    } catch (error) {\n      console.error('❌ [NewsService] API Error:', error);\n      console.error('❌ [NewsService] Error status:', error.response?.status);\n      console.error('❌ [NewsService] Error data:', error.response?.data);\n      throw error; \n    }\n  },\n\n  // Get news by ID\n  getNewsById: async (id) => {\n    try {\n      const newsArticle = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      return newsArticle;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  createNews: async (newsData) => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      return response.data || response;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      return response;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a news article\n  deleteNews: async (id) => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      return response;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    try {\n      const formData = new FormData();\n      formData.append('files', file); \n\n      const config = createFileUploadConfig(onUploadProgress);\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response;\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n\n  getImageUrl: (imageName) => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\n\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}