{"ast":null,"code":"import apiClient from './apiClient';\nimport { createFileUploadConfig } from './apiClient';\nconst API_BASE_PATH = '/api/v1/news';\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const newsList = await apiClient.get(API_BASE_PATH);\n      return newsList;\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const newsArticle = await apiClient.get(`${API_BASE_PATH}/${id}`);\n      return newsArticle;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData);\n      return response.data || response;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\n      return response;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\n      return response;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\n    try {\n      const formData = new FormData();\n      formData.append('files', file);\n      const config = createFileUploadConfig(onUploadProgress);\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\n      return response;\n    } catch (error) {\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  getImageUrl: imageName => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\nexport default newsService;","map":{"version":3,"names":["apiClient","createFileUploadConfig","API_BASE_PATH","newsService","getAllNews","newsList","get","error","console","getNewsById","id","newsArticle","createNews","newsData","response","post","data","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","file","onUploadProgress","formData","FormData","append","config","getImageUrl","imageName","process","env","REACT_APP_API_URL"],"sources":["C:/Users/ACER/Desktop/fe/fe-sport/src/services/newsService.js"],"sourcesContent":["import apiClient from './apiClient'; \r\nimport { createFileUploadConfig } from './apiClient'; \r\n\r\nconst API_BASE_PATH = '/api/v1/news';\r\n\r\nconst newsService = {\r\n  // Get all news articles\r\n  getAllNews: async () => {\r\n    try {\r\n\r\n      const newsList = await apiClient.get(API_BASE_PATH);\r\n      return newsList;\r\n    } catch (error) {\r\n      console.error(\"Error fetching all news:\", error);\r\n      throw error; \r\n    }\r\n  },\r\n\r\n  // Get news by ID\r\n  getNewsById: async (id) => {\r\n    try {\r\n      const newsArticle = await apiClient.get(`${API_BASE_PATH}/${id}`);\r\n      return newsArticle;\r\n    } catch (error) {\r\n      console.error(`Error fetching news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createNews: async (newsData) => {\r\n    try {\r\n      const response = await apiClient.post(API_BASE_PATH, newsData);\r\n      return response.data || response;\r\n    } catch (error) {\r\n      console.error(\"Error creating news:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update a news article\r\n  updateNews: async (id, newsData) => {\r\n    try {\r\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error updating news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a news article\r\n  deleteNews: async (id) => {\r\n    try {\r\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error deleting news with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  uploadNewsAttachments: async (newsId, file, onUploadProgress) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('files', file); \r\n\r\n      const config = createFileUploadConfig(onUploadProgress);\r\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, config);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error uploading attachment for news ID ${newsId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getImageUrl: (imageName) => {\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\r\n  }\r\n};\r\n\r\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}