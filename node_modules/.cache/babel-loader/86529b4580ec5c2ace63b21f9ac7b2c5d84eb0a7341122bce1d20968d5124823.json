{"ast":null,"code":"// src/services/newsService.js\nimport apiClient from './api'; // Import apiClient từ file api.js của bạn\n\nconst API_BASE_PATH = '/api/v1/news'; // Sử dụng đường dẫn tương đối nếu apiClient đã có base URL\n\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n  // Get news by ID\n  getNewsById: async id => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create a new news article\n  createNews: async newsData => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a news article\n  deleteNews: async id => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Upload attachments for a news article\n  uploadNewsAttachments: async (newsId, files) => {\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('files', file);\n      });\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, {\n        // Sử dụng apiClient\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error uploading attachments for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n  // Get image by name (for displaying attachments)\n  getImageUrl: imageName => {\n    // Lưu ý: Nếu apiClient của bạn đã có baseUrl, thì đường dẫn này có thể cần được điều chỉnh\n    // Ví dụ nếu baseUrl là \"http://localhost:8080\", thì ở đây chỉ cần \"/api/v1/news/image/\"\n    return `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\nexport default newsService;","map":{"version":3,"names":["apiClient","API_BASE_PATH","newsService","getAllNews","response","get","data","error","console","getNewsById","id","createNews","newsData","post","updateNews","put","deleteNews","delete","uploadNewsAttachments","newsId","files","formData","FormData","forEach","file","append","headers","getImageUrl","imageName","process","env","REACT_APP_API_BASE_URL"],"sources":["/Users/lucas/Desktop/an/fe-edu/src/services/newsService.js"],"sourcesContent":["// src/services/newsService.js\nimport apiClient from './api'; // Import apiClient từ file api.js của bạn\n\nconst API_BASE_PATH = '/api/v1/news'; // Sử dụng đường dẫn tương đối nếu apiClient đã có base URL\n\nconst newsService = {\n  // Get all news articles\n  getAllNews: async () => {\n    try {\n      const response = await apiClient.get(API_BASE_PATH); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching all news:\", error);\n      throw error;\n    }\n  },\n\n  // Get news by ID\n  getNewsById: async (id) => {\n    try {\n      const response = await apiClient.get(`${API_BASE_PATH}/${id}`); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Create a new news article\n  createNews: async (newsData) => {\n    try {\n      const response = await apiClient.post(API_BASE_PATH, newsData); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating news:\", error);\n      throw error;\n    }\n  },\n\n  // Update a news article\n  updateNews: async (id, newsData) => {\n    try {\n      const response = await apiClient.put(`${API_BASE_PATH}/${id}`, newsData); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Delete a news article\n  deleteNews: async (id) => {\n    try {\n      const response = await apiClient.delete(`${API_BASE_PATH}/${id}`); // Sử dụng apiClient\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting news with ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Upload attachments for a news article\n  uploadNewsAttachments: async (newsId, files) => {\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('files', file);\n      });\n\n      const response = await apiClient.post(`${API_BASE_PATH}/uploads/${newsId}`, formData, { // Sử dụng apiClient\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error uploading attachments for news ID ${newsId}:`, error);\n      throw error;\n    }\n  },\n\n  // Get image by name (for displaying attachments)\n  getImageUrl: (imageName) => {\n    // Lưu ý: Nếu apiClient của bạn đã có baseUrl, thì đường dẫn này có thể cần được điều chỉnh\n    // Ví dụ nếu baseUrl là \"http://localhost:8080\", thì ở đây chỉ cần \"/api/v1/news/image/\"\n    return `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080'}${API_BASE_PATH}/image/${imageName}`;\n  }\n};\n\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}